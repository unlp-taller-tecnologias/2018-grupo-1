{% extends 'templates/layout.html.twig' %}

{% block body %}

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

{{ form_start(form) }}
    {# render the task's only field: description #}
    {{ form_row(form.nombre) }}
    {{ form_row(form.apellido) }}
-------------------------
    <h3>Telefonos</h3>
    <ul class="telefonos">
        <div class="col-sm-8 col-sm-offset-2" id="telefonos_list" data-prototype="{{ form_widget(form.telefonos.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for telefono in form.telefonos %}
            <li>{{ form_row(telefono.numero) }}</li>
        {% endfor %}
        {{ form_widget(form.telefonos.vars.prototype.numero) }}
    </ul>
-------------------------
    <h3>Vinculos significativos</h3>
    <ul class="vinculosSignificativos">
        <div class="col-sm-8 col-sm-offset-2" id="vinculos_significativos_list" data-prototype="{{ form_widget(form.vinculosSignificativos.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for vinculo in form.vinculosSignificativos %}
            <li>{{ form_row(vinculo.numero) }}</li> aaa
        {% endfor %}
        {{ form_widget(form.vinculosSignificativos.vars.prototype) }}
    </ul>

-------------------------
    <h3>Evaluaciones de riesgo</h3>
    <ul class="evaluacionesDeRiesgo">
        <div class="col-sm-8 col-sm-offset-2" id="evaluaciones_de_riesgo_list" data-prototype="{{ form_widget(form.evaluacionesDeRiesgo.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for telefono in form.vinculosSignificativos %}
            <li>{{ form_row(telefono.numero) }}</li>
        {% endfor %}
        {{ form_widget(form.vinculosSignificativos.vars.prototype) }}
    </ul>

-------------------------

    <input type="submit" value="Create" />
    {#{{ form_row(form.telefonos) }}#}
{{ form_end(form) }}  
{#    <h1>Victima creation</h1>

    {{ form_start(form) }}
    #}{#{{ form_row(form.telefonos) }}
        {# render each row and field in the embedded form, in this example it's rendering the telefonoserience (telefonos) fiels as rows #}
        {#<div class="col-sm-8 col-sm-offset-2" id="telefonos_list" data-prototype="{{ form_widget(form.telefonos.vars.prototype)|e('html_attr') }}">
            {% for row in form.telefonos %}
                <div class="panel panel-warning">
                    <div class="panel-heading">
                        <strong>{{ row.vars.value }}</strong>
                    </div>
                    <div class="panel-body">
                        {{ form_row(row) }}
                    </div>
                </div>
            {% endfor %}
        </div>
        {{ form_widget(form) }}
        <input type="submit" value="Create" />
    {{ form_end(form) }}

    <ul>
        <li>
            <a href="{{ path('victima_index') }}">Back to the list</a>
        </li>
    </ul>#}
    <script type="text/javascript">
// this variable is the list in the dom, it's initiliazed when the document is ready
var $collectionHolder;
// the link which we click on to add new items
var $addNewItem = $('<a href="#" class="btn btn-info">Agregar telefono</a>');
// when the page is loaded and ready
$(document).ready(function () {
    // get the collectionHolder, initilize the var by getting the list;
    $collectionHolder = $('#telefonos_list');
    // append the add new item link to the collectionHolder
    $collectionHolder.append($addNewItem);
    // add an index property to the collectionHolder which helps track the count of forms we have in the list
    $collectionHolder.data('index', $collectionHolder.find('.panel').length)
    // finds all the panels in the list and foreach one of them we add a remove button to it
    // add remove button to existing items
    $collectionHolder.find('.panel').each(function () {
        // $(this) means the current panel that we are at
        // which means we pass the panel to the addRemoveButton function
        // inside the function we create a footer and remove link and append them to the panel
        // more informations in the function inside
        addRemoveButton($(this));
    });
    // handle the click event for addNewItem
    $addNewItem.click(function (e) {
        // preventDefault() is your  homework if you don't know what it is
        // also look up preventPropagation both are usefull
        e.preventDefault();
        // create a new form and append it to the collectionHolder
        // and by form we mean a new panel which contains the form
        addNewForm();
    })
});
/*
 * creates a new form and appends it to the collectionHolder
 */
function addNewForm() {
    // getting the prototype
    // the prototype is the form itself, plain html
    var prototype = $collectionHolder.data('prototype');
    // get the index
    // this is the index we set when the document was ready, look above for more info
    var index = $collectionHolder.data('index');
    // create the form
    var newForm = prototype;
    // replace the __name__ string in the html using a regular telefonosression with the index value
    newForm = newForm.replace(/__name__/g, index);
    // incrementing the index data and setting it again to the collectionHolder
    $collectionHolder.data('index', index+1);
    // create the panel
    // this is the panel that will be appending to the collectionHolder
    var $panel = $('<div class="panel panel-warning"><div class="panel-heading"></div></div>');
    // create the panel-body and append the form to it
    var $panelBody = $('<div class="panel-body"></div>').append(newForm);
    // append the body to the panel
    $panel.append($panelBody);
    // append the removebutton to the new panel
    addRemoveButton($panel);
    // append the panel to the addNewItem
    // we are doing it this way to that the link is always at the bottom of the collectionHolder
    $addNewItem.before($panel);
}

/**
 * adds a remove button to the panel that is passed in the parameter
 * @param $panel
 */
function addRemoveButton ($panel) {
    // create remove button
    var $removeButton = $('<a href="#" class="btn btn-danger">Remove</a>');
    // appending the removebutton to the panel footer
    var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
    // handle the click event of the remove button
    $removeButton.click(function (e) {
        e.preventDefault();
        // gets the parent of the button that we clicked on "the panel" and animates it
        // after the animation is done the element (the panel) is removed from the html
        $(e.target).parents('.panel').slideUp(1000, function () {
            $(this).remove();
        })
    });
    // append the footer to the panel
    $panel.append($panelFooter);
}
    </script>

<script type="text/javascript">
// this variable is the list in the dom, it's initiliazed when the document is ready
var $collectionVinculos;
// the link which we click on to add new items
var $addNewVinculo = $('<a href="#" class="btn btn-info">Agregar vinculo significativo</a>');
// when the page is loaded and ready
$(document).ready(function () {
    // get the collectionVinculos, initilize the var by getting the list;
    $collectionVinculos = $('#vinculos_significativos_list');
    // append the add new item link to the collectionVinculos
    $collectionVinculos.append($addNewVinculo);
    // add an index property to the collectionVinculos which helps track the count of forms we have in the list
    $collectionVinculos.data('index', $collectionVinculos.find('.panel').length)
    // finds all the panels in the list and foreach one of them we add a remove button to it
    // add remove button to existing items
    $collectionVinculos.find('.panel').each(function () {
        // $(this) means the current panel that we are at
        // which means we pass the panel to the addRemoveButtonVinculo function
        // inside the function we create a footer and remove link and append them to the panel
        // more informations in the function inside
        addRemoveButtonVinculo($(this));
    });
    // handle the click event for addNewVinculo
    $addNewVinculo.click(function (e) {
        // preventDefault() is your  homework if you don't know what it is
        // also look up preventPropagation both are usefull
        e.preventDefault();
        // create a new form and append it to the collectionVinculos
        // and by form we mean a new panel which contains the form
        addNewFormVinculo();
    })
});
/*
 * creates a new form and appends it to the collectionVinculos
 */
function addNewFormVinculo() {
    // getting the prototype
    // the prototype is the form itself, plain html
    var prototype = $collectionVinculos.data('prototype');
    // get the index
    // this is the index we set when the document was ready, look above for more info
    var index = $collectionVinculos.data('index');
    // create the form
    var newForm = prototype;
    // replace the __name__ string in the html using a regular telefonosression with the index value
    newForm = newForm.replace(/__name__/g, index);
    // incrementing the index data and setting it again to the collectionVinculos
    $collectionVinculos.data('index', index+1);
    // create the panel
    // this is the panel that will be appending to the collectionVinculos
    var $panel = $('<div class="panel panel-warning"><div class="panel-heading"></div></div>');
    // create the panel-body and append the form to it
    var $panelBody = $('<div class="panel-body"></div>').append(newForm);
    // append the body to the panel
    $panel.append($panelBody);
    // append the removebutton to the new panel
    addRemoveButtonVinculo($panel);
    // append the panel to the addNewVinculo
    // we are doing it this way to that the link is always at the bottom of the collectionVinculos
    $addNewVinculo.before($panel);
}

/**
 * adds a remove button to the panel that is passed in the parameter
 * @param $panel
 */
function addRemoveButtonVinculo ($panel) {
    // create remove button
    var $removeButton = $('<a href="#" class="btn btn-danger">Remove</a>');
    // appending the removebutton to the panel footer
    var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
    // handle the click event of the remove button
    $removeButton.click(function (e) {
        e.preventDefault();
        // gets the parent of the button that we clicked on "the panel" and animates it
        // after the animation is done the element (the panel) is removed from the html
        $(e.target).parents('.panel').slideUp(1000, function () {
            $(this).remove();
        })
    });
    // append the footer to the panel
    $panel.append($panelFooter);
}

</script>
<script type="text/javascript">
// this variable is the list in the dom, it's initiliazed when the document is ready
var $collectionEvaluaciones;
// the link which we click on to add new items
var $addNewEvaluacion = $('<a href="#" class="btn btn-info">Agregar Evaluacion significativo</a>');
// when the page is loaded and ready
$(document).ready(function () {
    // get the collectionEvaluaciones, initilize the var by getting the list;
    $collectionEvaluaciones = $('#evaluaciones_de_riesgo_list');
    // append the add new item link to the collectionEvaluaciones
    $collectionEvaluaciones.append($addNewEvaluacion);
    // add an index property to the collectionEvaluaciones which helps track the count of forms we have in the list
    $collectionEvaluaciones.data('index', $collectionEvaluaciones.find('.panel').length)
    // finds all the panels in the list and foreach one of them we add a remove button to it
    // add remove button to existing items
    $collectionEvaluaciones.find('.panel').each(function () {
        // $(this) means the current panel that we are at
        // which means we pass the panel to the addRemoveButtonEvaluacion function
        // inside the function we create a footer and remove link and append them to the panel
        // more informations in the function inside
        addRemoveButtonEvaluacion($(this));
    });
    // handle the click event for addNewEvaluacion
    $addNewEvaluacion.click(function (e) {
        // preventDefault() is your  homework if you don't know what it is
        // also look up preventPropagation both are usefull
        e.preventDefault();
        // create a new form and append it to the collectionEvaluaciones
        // and by form we mean a new panel which contains the form
        addNewFormEvaluacion();
    })
});
/*
 * creates a new form and appends it to the collectionEvaluaciones
 */
function addNewFormEvaluacion() {
    // getting the prototype
    // the prototype is the form itself, plain html
    var prototype = $collectionEvaluaciones.data('prototype');
    // get the index
    // this is the index we set when the document was ready, look above for more info
    var index = $collectionEvaluaciones.data('index');
    // create the form
    var newForm = prototype;
    // replace the __name__ string in the html using a regular telefonosression with the index value
    newForm = newForm.replace(/__name__/g, index);
    // incrementing the index data and setting it again to the collectionEvaluaciones
    $collectionEvaluaciones.data('index', index+1);
    // create the panel
    // this is the panel that will be appending to the collectionEvaluaciones
    var $panel = $('<div class="panel panel-warning"><div class="panel-heading"></div></div>');
    // create the panel-body and append the form to it
    var $panelBody = $('<div class="panel-body"></div>').append(newForm);
    // append the body to the panel
    $panel.append($panelBody);
    // append the removebutton to the new panel
    addRemoveButtonEvaluacion($panel);
    // append the panel to the addNewEvaluacion
    // we are doing it this way to that the link is always at the bottom of the collectionEvaluaciones
    $addNewEvaluacion.before($panel);
}

/**
 * adds a remove button to the panel that is passed in the parameter
 * @param $panel
 */
function addRemoveButtonEvaluacion ($panel) {
    // create remove button
    var $removeButton = $('<a href="#" class="btn btn-danger">Remove</a>');
    // appending the removebutton to the panel footer
    var $panelFooter = $('<div class="panel-footer"></div>').append($removeButton);
    // handle the click event of the remove button
    $removeButton.click(function (e) {
        e.preventDefault();
        // gets the parent of the button that we clicked on "the panel" and animates it
        // after the animation is done the element (the panel) is removed from the html
        $(e.target).parents('.panel').slideUp(1000, function () {
            $(this).remove();
        })
    });
    // append the footer to the panel
    $panel.append($panelFooter);
}

</script>

{% endblock %}

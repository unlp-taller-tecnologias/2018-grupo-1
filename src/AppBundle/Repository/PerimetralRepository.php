<?php

namespace AppBundle\Repository;

/**
 * PerimetralRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PerimetralRepository extends \Doctrine\ORM\EntityRepository
{
  public function getVencidas(){
      $query =$this->getEntityManager()
        ->createQuery('SELECT p FROM AppBundle:Perimetral p WHERE p.vencimiento < :today AND p.resuelta = 0')
        ->setParameter('today', new \DateTime())
        ->getResult();
      return $query;
  }
  public function getVencer($dias){
    $today = new \DateTime('now');
    $tomorrow= new \DateTime('now');
    $tomorrow->modify("+".strval($dias)."day");
    $query = $this->getEntityManager()
      ->createQuery('SELECT p FROM AppBundle:Perimetral p WHERE p.resuelta = 0 AND p.vencimiento BETWEEN :today AND :nextDay')
      ->setParameter('today', $today)
      ->setParameter('nextDay', $tomorrow)
      ->getResult();
    return $query;
  }

  public function expedientesPerimetralesVencidas(){
    $query =$this->getEntityManager()
      ->createQuery('SELECT DISTINCT e.nroExp,p.vencimiento,v.nombre
        FROM AppBundle:Expediente e
        INNER JOIN AppBundle:Victima v
        INNER JOIN AppBundle:EvaluacionRiesgo er
        INNER JOIN AppBundle:EvaluacionMedida em
        INNER JOIN AppBundle:MedidaJudicial m
        INNER JOIN AppBundle:Perimetral p WHERE e.victima = v.id AND er.victima = v.id AND er.id = em.evaluacionId AND em.medidaId = m.id AND m.perimetral = p.id
        AND p.vencimiento < :today AND p.resuelta = 0')
      ->setParameter('today', new \DateTime())
      ->getArrayResult();
    return $query;
  }

  public function expedientesPerimetralesPorVencer($dias){
    $today = new \DateTime('now');
    $tomorrow= new \DateTime('now');
    $tomorrow->modify("+".strval($dias)."day");
    $query =$this->getEntityManager()
      ->createQuery('SELECT e.nroExp,p.vencimiento,v.nombre FROM AppBundle:Expediente e
                      INNER JOIN AppBundle:EvaluacionRiesgo er INNER JOIN AppBundle:EvaluacionMedida em
                      INNER JOIN AppBundle:MedidaJudicial m INNER JOIN AppBundle:Perimetral p
                      INNER JOIN AppBundle:Victima v
                      WHERE e.victima = v.id AND er.victima = v.id AND er.id = em.evaluacionId AND em.medidaId = m.id AND m.perimetral = p.id
                      AND p.resuelta = 0 AND p.vencimiento BETWEEN :today AND :nextDay')
      ->setParameter('today', $today)
      ->setParameter('nextDay', $tomorrow)
      ->getArrayResult();
    return $query;
  }


}
